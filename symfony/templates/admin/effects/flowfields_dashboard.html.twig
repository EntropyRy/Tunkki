{% set title = 'Flowfields Dashboard' %}
<!DOCTYPE html>
<html lang="{{ app.request.locale|default('en') }}">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>{{ title }} — Event #{{ event.id }}</title>
    <style>
        html, body {
            margin: 0; padding: 0;
            height: 100%;
            background: #0b0b0b;
            color: #eee;
            font-family: system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, Cantarell, Noto Sans, 'Helvetica Neue', Arial, 'Apple Color Emoji','Segoe UI Emoji','Segoe UI Symbol', sans-serif;
        }
        .layout {
            position: relative;
            min-height: 100vh;
            overflow: hidden;
        }
        /* Full-viewport preview canvas behind the editor */
        #flowfields {
            position: fixed;
            inset: 0;
            z-index: 0;
            pointer-events: none;
        }
        /* Top bar */
        .topbar {
            position: fixed;
            top: 0; left: 0; right: 0;
            z-index: 2;
            display: flex;
            align-items: center;
            justify-content: space-between;
            gap: 1rem;
            padding: 0.6rem 1rem;
            background: rgba(0,0,0,0.65);
            backdrop-filter: blur(4px);
            border-bottom: 1px solid rgba(255,255,255,0.08);
        }
        .topbar .links a {
            color: #ddd;
            text-decoration: none;
            margin-right: 0.75rem;
        }
        .topbar .links a:hover {
            text-decoration: underline;
        }
        .pill {
            display: inline-block;
            padding: 0.1rem 0.5rem;
            border-radius: 999px;
            font-size: 0.8rem;
            background: rgba(255,255,255,0.1);
            border: 1px solid rgba(255,255,255,0.15);
            color: #eee;
            margin-left: 0.5rem;
        }

        /* Editor panel */
        .editor {
            position: fixed;
            right: 0; top: 48px; bottom: 0;
            width: min(48vw, 680px);
            z-index: 3;
            background: #0f0f10;
            border-left: 1px solid rgba(255,255,255,0.08);
            box-shadow: -10px 0 20px rgba(0,0,0,0.35);
            display: flex;
            flex-direction: column;
        }
        .editor .head {
            padding: 0.9rem 1rem 0.2rem 1rem;
            border-bottom: 1px solid rgba(255,255,255,0.06);
        }
        .editor .head h2 {
            font-size: 1rem; margin: 0 0 0.3rem 0; color: #fff;
        }
        .editor .head .hint {
            font-size: 0.85rem; color: #aaa;
        }
        .editor .body {
            padding: 0.75rem 1rem 1rem 1rem;
            display: flex;
            flex-direction: column;
            gap: 0.75rem;
            overflow: auto;
        }
        .editor label {
            font-size: 0.9rem;
            color: #ddd;
        }
        .editor textarea {
            width: 100%;
            min-height: 320px;
            resize: vertical;
            font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
            font-size: 0.92rem;
            line-height: 1.35rem;
            color: #eaeaea;
            background: #121214;
            border: 1px solid rgba(255,255,255,0.12);
            border-radius: 8px;
            padding: 0.75rem;
            outline: none;
        }
        .editor textarea:focus {
            border-color: rgba(255,255,255,0.3);
            box-shadow: 0 0 0 3px rgba(100,149,237,0.25);
        }
        .row {
            display: flex;
            gap: 0.5rem;
            align-items: center;
            flex-wrap: wrap;
        }
        .btn {
            appearance: none;
            border: 1px solid rgba(255,255,255,0.18);
            background: linear-gradient(180deg, rgba(255,255,255,0.06), rgba(255,255,255,0.02));
            color: #f3f3f3;
            padding: 0.55rem 0.9rem;
            border-radius: 8px;
            cursor: pointer;
            font-size: 0.95rem;
        }
        .btn:hover {
            border-color: rgba(255,255,255,0.35);
            background: linear-gradient(180deg, rgba(255,255,255,0.1), rgba(255,255,255,0.04));
        }
        .btn.primary {
            border-color: rgba(72,138,255,0.6);
            color: #fff;
            background: linear-gradient(180deg, rgba(72,138,255,0.25), rgba(72,138,255,0.18));
        }
        .btn.primary:hover {
            border-color: rgba(72,138,255,0.8);
            background: linear-gradient(180deg, rgba(72,138,255,0.35), rgba(72,138,255,0.22));
        }
        .btn.warn {
            border-color: rgba(255, 168, 0, 0.55);
            color: #fff;
            background: linear-gradient(180deg, rgba(255,168,0,0.25), rgba(255,168,0,0.16));
        }
        .btn.warn:hover {
            border-color: rgba(255, 168, 0, 0.8);
        }
        .muted {
            color: #9aa0a6;
            font-size: 0.85rem;
        }
        .footer {
            margin-top: auto;
            padding-top: 0.5rem;
            border-top: 1px dashed rgba(255,255,255,0.08);
        }
        .notice {
            background: rgba(255,255,255,0.06);
            border: 1px solid rgba(255,255,255,0.12);
            border-radius: 8px;
            padding: 0.6rem 0.75rem;
            color: #ddd;
            font-size: 0.9rem;
        }
        .kbd {
            background: #1b1b1d;
            border: 1px solid rgba(255,255,255,0.15);
            border-bottom-width: 2px;
            border-radius: 6px;
            padding: 0.1rem 0.35rem;
            font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
            color: #eee;
        }
        @media (max-width: 900px) {
            .editor { width: 100vw; }
        }
    </style>
    {{ importmap(['flowfields']) }}
</head>
<body>
<div class="layout">
    <div class="topbar">
        <div>
            <strong>{{ title }}</strong>
            <span class="pill">Event #{{ event.id }}</span>
        </div>
        <div class="links">
            <a href="{{ path('sonata_admin_dashboard') }}">Admin dashboard</a>
            <a href="{{ path('entropy_event', {id: event.id}) }}" target="_blank" rel="noopener">View public page</a>
        </div>
    </div>

    <canvas
        id="flowfields"
        class="effect_canvas"
        data-config='{{ configJson }}'
        style="opacity: 1; z-index: 0;"
    ></canvas>

    <aside class="editor" aria-label="Flowfields JSON editor panel">
        <div class="head">
            <h2>Flowfields configuration JSON</h2>
            <div class="hint">
                The preview updates when you click “Apply to preview”. Saving writes this JSON to the event.
            </div>
        </div>
        <div class="body">
            <form id="flowfields-form" method="post" action="{{ saveUrl }}">
                <input type="hidden" name="_token" value="{{ csrf_token }}">
                <label for="config" class="muted">Edit JSON</label>
                <textarea id="config" name="config" spellcheck="false">{{ configJson }}</textarea>

                <div class="row">
                    <button type="button" class="btn" id="formatJson">Format JSON</button>
                    <button type="button" class="btn warn" id="applyPreview">Apply to preview</button>
                    <button type="submit" class="btn primary">Save to event</button>
                </div>

                <div class="footer">
                    <div class="notice">
                        Tips:
                        - Keep the JSON small and valid. Use “Format JSON” to pretty-print.
                        - If the preview seems unchanged, press <span class="kbd">Ctrl</span> + <span class="kbd">R</span> to reload.
                        - This page is scoped to Flowfields only.
                    </div>
                </div>
            </form>
        </div>
    </aside>
</div>

<script>
    (function () {
        const textarea = document.getElementById('config');
        const applyBtn = document.getElementById('applyPreview');
        const formatBtn = document.getElementById('formatJson');
        const canvas = document.getElementById('flowfields');

        function parseJsonSafe(s) {
            if (!s) return null;
            try {
                const obj = JSON.parse(s);
                return (obj && typeof obj === 'object') ? obj : null;
            } catch (e) {
                return null;
            }
        }

        function formatJson() {
            const raw = textarea.value;
            const obj = parseJsonSafe(raw);
            if (!obj) {
                alert('Cannot format: JSON is invalid.');
                return;
            }
            textarea.value = JSON.stringify(obj, null, 2);
        }

        function applyToPreview() {
            const raw = textarea.value;
            const obj = parseJsonSafe(raw);
            if (!obj) {
                alert('Preview failed: JSON is invalid.');
                return;
            }
            // Update the data-config attribute used by the effect script
            canvas.setAttribute('data-config', JSON.stringify(obj));
            // Easiest reliable way to reinitialize current module’s top-level:
            // reload the page. This ensures the effect script re-reads config.
            location.reload();
        }

        formatBtn.addEventListener('click', formatJson);
        applyBtn.addEventListener('click', applyToPreview);
    })();
</script>
</body>
</html>
