# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    mm_tunkki_hook: '%env(MM_TUNKKI_HOOK)%'
    mm_tunkki_img: '%env(MM_TUNKKI_IMG)%'
    mm_tunkki_botname: '%env(MM_TUNKKI_BOTNAME)%'
    mattermost_client_id: '%env(MM_CLIENT_ID)%'
    mattermost_client_secret: '%env(MM_CLIENT_SECRET)%'
    mattermost_redirect_route: '%env(MM_REDIRECT)%'
    booking_notification_email: '%env(BOOKING_NOTIFICATION_EMAIL)%'
    mailer_sender_address: 'webmaster@entropy.fi'

services:
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php,Application}'

    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    Sonata\ClassificationBundle\Model\CategoryManagerInterface: '@sonata.classification.manager.category'

    entropy_tunkki.admin.item:
        class: App\Admin\ItemAdmin
        arguments:
            - ~
            - App\Entity\Item
            - App:ItemAdmin
            - "@entropy_tunkki.helper.mattermost"
            - "@security.token_storage"
            - "@sonata.classification.manager.context"
        tags:
            - { name: sonata.admin, manager_type: orm, audit: true, group: admin, label: Items }
        calls:
            - [setTemplate, [outer_list_rows_mosaic, App:Admin:list_outer_rows_mosaic.html.twig]]
            - [setTemplate, [inner_list_row, App:Admin:list_items.html.twig]]
            - [setTemplate, [base_list_field, SonataAdminBundle:CRUD:base_list_flat_field.html.twig]]
            - [addChild, ['@entropy_tunkki.admin.event', 'item']]
            - [addChild, ['@entropy_tunkki.admin.file', 'product']]
    entropy_tunkki.helper.mattermost:
        class: App\Helper\Mattermost
        arguments: ["@service_container"]
    my_mattermost_authenticator:
        class: App\Security\MattermostAuthenticator
        #autowire: true
        # use autowiring, OR you can specify the argument manually
        arguments:
            - '@oauth2.registry'
            - '@doctrine.orm.entity_manager'
            - '@router'

    entropy_tunkki.form.type.items:
        class: App\Form\Type\ItemsType
        arguments:
            - '@doctrine.orm.entity_manager'
            - '@sonata.classification.manager.category'
        tags:
            - { name: form.type }

    entropy_tunkki.form.type.packages:
        class: App\Form\Type\PackagesType
        arguments:
            - '@doctrine.orm.entity_manager'
        tags:
            - { name: form.type }
    entropy_tunkki.admin.event:
        class: App\Admin\EventAdmin
        arguments:
            - ~
            - App\Entity\Event
            - SonataAdminBundle:CRUD
            - "@entropy_tunkki.helper.mattermost"
            - "@security.token_storage"
        tags:
            - { name: sonata.admin, manager_type: orm, group: admin, label: Item Events, show_mosaic_button: false  }

    entropy_tunkki.admin.user:
        class: App\Admin\UserAdmin
        arguments:
            - ~
            - Application\Sonata\UserBundle\Entity\User
            - SonataAdminBundle:CRUD
            - "@entropy_tunkki.helper.mattermost"
            - "@security.token_storage"
        tags:
            - { name: sonata.admin, manager_type: orm, audit: true, group: admin, label: Users }

    entropy_tunkki.admin.file:
        class: App\Admin\FileAdmin
        arguments: [~, App\Entity\File, SonataAdminBundle:CRUD]
        tags:
            - { name: sonata.admin, manager_type: orm, group: admin, label: Files, show_mosaic_button: false }

    entropy_tunkki.admin.member:
        class: App\Admin\MemberAdmin
        arguments: [~, App\Entity\Member, EntropyTunkkiBundle:MemberAdmin]
        tags:
            - { name: sonata.admin, manager_type: orm, group: admin, label: Members}
    entropy_tunkki.page.itempage:
        class: App\PageService\ItemPage
        arguments:
                - "Item history"
                - "@sonata.page.template_manager"
                - "@doctrine.orm.entity_manager"
        tags:
                - { name: sonata.page, alias: Item}

    entropy_tunkki.admin.booking:
        class: App\Admin\BookingAdmin
        arguments:
            - ~
            - App\Entity\Booking
            - EntropyTunkkiBundle:BookingAdmin
            - "@entropy_tunkki.helper.mattermost"
            - "@security.token_storage"
            - "@doctrine.orm.entity_manager"
            - "@sonata.classification.manager.category"
        tags:
            - { name: sonata.admin, manager_type: orm, audit: true, group: admin, label: Bookings, show_mosaic_button: false }
        calls:
            - [setTemplate, [inner_list_row, EntropyTunkkiBundle:Admin:list_bookings.html.twig]]
            - [setTemplate, [base_list_field, SonataAdminBundle:CRUD:base_list_flat_field.html.twig]]
            - [addChild, ['@entropy_tunkki.admin.event', 'booking']]

    entropy_tunkki.admin.package:
        class: App\Admin\PackageAdmin
        arguments: [~, App\Entity\Package, EntropyTunkkiBundle:PackageAdmin]
        tags:
            - { name: sonata.admin, manager_type: orm, group: admin, label: Packages }

    entropy_tunkki.admin.renter:
        class: App\Admin\RenterAdmin
        arguments: [~, App\Entity\Renter, EntropyTunkkiBundle:RenterAdmin]
        tags:
            - { name: sonata.admin, manager_type: orm, group: admin, label: Renters }
    entropy_tunkki.admin.billable_event:
        class: App\Admin\BillableEventAdmin
        arguments: [~, App\Entity\BillableEvent, SonataAdminBundle:CRUD]
        tags:
            - { name: sonata.admin, manager_type: orm, group: admin, label: Billable Events }

    entropy_tunkki.block.bookings:
        class: App\Block\BookingsBlock
        arguments: # Nämä kaikki välitetään classin _construct functiolle
            - "Booking Block" # Tämä on blockin nimi adminissa
            - "@templating" # teplate
            - "@doctrine.orm.entity_manager" # Entity manager blockin käyttöön
        tags:
            - { name: sonata.block, alias: bookingblock }

    entropy_tunkki.block.brokenitems:
        class: App\Block\BrokenItemsBlock
        arguments: # Nämä kaikki välitetään classin _construct functiolle
            - "Broken Items Block" # Tämä on blockin nimi adminissa
            - "@templating" # teplate
            - "@doctrine.orm.entity_manager" # Entity manager blockin käyttöön
        tags:
            - { name: sonata.block, alias: brokenitemsblock }

    entropy_tunkki.admin.who_can_rent_choice:
        class: App\Admin\WhoCanRentChoiceAdmin
        arguments: [~, App\Entity\WhoCanRentChoice, SonataAdminBundle:CRUD]
        tags:
            - { name: sonata.admin, manager_type: orm, group: admin, label: WhoCanRentChoices }

    entropy_tunkki.admin.accessory:
        class: App\Admin\AccessoryAdmin
        arguments: [~, App\Entity\Accessory, SonataAdminBundle:CRUD]
        tags:
            - { name: sonata.admin, manager_type: orm, group: admin, label: Accessory }
    entropy_tunkki.admin.accessory_choices:
        class: App\Admin\AccessoryChoiceAdmin
        arguments: [~, App\Entity\AccessoryChoice, SonataAdminBundle:CRUD]
        tags:
            - { name: sonata.admin, manager_type: orm, group: admin, label: AccessoryChoices }

    entropy_tunkki.admin.email_notification:
        class: App\EventListener\BookingAdminListener
        arguments:
            - "@swiftmailer.mailer"
            - "@templating"
            - "%booking_notification_email%"
            - "%mm_tunkki_img%"
            - "%mailer_sender_address%"
        tags:
            - { name: kernel.event_listener, event: sonata.admin.event.persistence.post_persist, method: sendEmailNotification }

